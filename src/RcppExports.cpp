// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// addNoiseToDataVector
std::vector<double> addNoiseToDataVector(const std::vector<double>& dataVector, double scaleGaussian, unsigned long long rSeed);
RcppExport SEXP _scamp_addNoiseToDataVector(SEXP dataVectorSEXP, SEXP scaleGaussianSEXP, SEXP rSeedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type dataVector(dataVectorSEXP);
    Rcpp::traits::input_parameter< double >::type scaleGaussian(scaleGaussianSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type rSeed(rSeedSEXP);
    rcpp_result_gen = Rcpp::wrap(addNoiseToDataVector(dataVector, scaleGaussian, rSeed));
    return rcpp_result_gen;
END_RCPP
}
// cppNoisyScamp
Rcpp::List cppNoisyScamp(Rcpp::NumericMatrix& rawDataMatrix, double dipT, int clusterLB, bool repeatsAllowed, int maxSearchDepth, long maxClusterNum, Rcpp::StringVector userAnnotations, long maxNumberOfGates, bool randomSearch, bool randomResidualSearch, const std::vector<double>& finalAnnotationQs, int numThreadsRequested, bool useRestrictedValue, Rcpp::NumericMatrix& restrictedValueMatrix, bool useFixedAnnotationBoundaries, Rcpp::List fixedAnnBdrys, int numberOfScampIterations, std::string outputDirectory, bool verboseOutput, double maxSearchTime, bool debugScampRun, double gaussianScale, unsigned long long randomSeed);
RcppExport SEXP _scamp_cppNoisyScamp(SEXP rawDataMatrixSEXP, SEXP dipTSEXP, SEXP clusterLBSEXP, SEXP repeatsAllowedSEXP, SEXP maxSearchDepthSEXP, SEXP maxClusterNumSEXP, SEXP userAnnotationsSEXP, SEXP maxNumberOfGatesSEXP, SEXP randomSearchSEXP, SEXP randomResidualSearchSEXP, SEXP finalAnnotationQsSEXP, SEXP numThreadsRequestedSEXP, SEXP useRestrictedValueSEXP, SEXP restrictedValueMatrixSEXP, SEXP useFixedAnnotationBoundariesSEXP, SEXP fixedAnnBdrysSEXP, SEXP numberOfScampIterationsSEXP, SEXP outputDirectorySEXP, SEXP verboseOutputSEXP, SEXP maxSearchTimeSEXP, SEXP debugScampRunSEXP, SEXP gaussianScaleSEXP, SEXP randomSeedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type rawDataMatrix(rawDataMatrixSEXP);
    Rcpp::traits::input_parameter< double >::type dipT(dipTSEXP);
    Rcpp::traits::input_parameter< int >::type clusterLB(clusterLBSEXP);
    Rcpp::traits::input_parameter< bool >::type repeatsAllowed(repeatsAllowedSEXP);
    Rcpp::traits::input_parameter< int >::type maxSearchDepth(maxSearchDepthSEXP);
    Rcpp::traits::input_parameter< long >::type maxClusterNum(maxClusterNumSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type userAnnotations(userAnnotationsSEXP);
    Rcpp::traits::input_parameter< long >::type maxNumberOfGates(maxNumberOfGatesSEXP);
    Rcpp::traits::input_parameter< bool >::type randomSearch(randomSearchSEXP);
    Rcpp::traits::input_parameter< bool >::type randomResidualSearch(randomResidualSearchSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type finalAnnotationQs(finalAnnotationQsSEXP);
    Rcpp::traits::input_parameter< int >::type numThreadsRequested(numThreadsRequestedSEXP);
    Rcpp::traits::input_parameter< bool >::type useRestrictedValue(useRestrictedValueSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type restrictedValueMatrix(restrictedValueMatrixSEXP);
    Rcpp::traits::input_parameter< bool >::type useFixedAnnotationBoundaries(useFixedAnnotationBoundariesSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type fixedAnnBdrys(fixedAnnBdrysSEXP);
    Rcpp::traits::input_parameter< int >::type numberOfScampIterations(numberOfScampIterationsSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputDirectory(outputDirectorySEXP);
    Rcpp::traits::input_parameter< bool >::type verboseOutput(verboseOutputSEXP);
    Rcpp::traits::input_parameter< double >::type maxSearchTime(maxSearchTimeSEXP);
    Rcpp::traits::input_parameter< bool >::type debugScampRun(debugScampRunSEXP);
    Rcpp::traits::input_parameter< double >::type gaussianScale(gaussianScaleSEXP);
    Rcpp::traits::input_parameter< unsigned long long >::type randomSeed(randomSeedSEXP);
    rcpp_result_gen = Rcpp::wrap(cppNoisyScamp(rawDataMatrix, dipT, clusterLB, repeatsAllowed, maxSearchDepth, maxClusterNum, userAnnotations, maxNumberOfGates, randomSearch, randomResidualSearch, finalAnnotationQs, numThreadsRequested, useRestrictedValue, restrictedValueMatrix, useFixedAnnotationBoundaries, fixedAnnBdrys, numberOfScampIterations, outputDirectory, verboseOutput, maxSearchTime, debugScampRun, gaussianScale, randomSeed));
    return rcpp_result_gen;
END_RCPP
}
// doubleDip
double doubleDip(const std::vector<double>& x);
RcppExport SEXP _scamp_doubleDip(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(doubleDip(x));
    return rcpp_result_gen;
END_RCPP
}
// singleDip
double singleDip(const std::vector<double>& x);
RcppExport SEXP _scamp_singleDip(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(singleDip(x));
    return rcpp_result_gen;
END_RCPP
}
// tripleDip
double tripleDip(const std::vector<double>& x);
RcppExport SEXP _scamp_tripleDip(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(tripleDip(x));
    return rcpp_result_gen;
END_RCPP
}
// tsGates
std::vector<double> tsGates(const std::vector<double>& xVec, int modePrior);
RcppExport SEXP _scamp_tsGates(SEXP xVecSEXP, SEXP modePriorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type xVec(xVecSEXP);
    Rcpp::traits::input_parameter< int >::type modePrior(modePriorSEXP);
    rcpp_result_gen = Rcpp::wrap(tsGates(xVec, modePrior));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scamp_addNoiseToDataVector", (DL_FUNC) &_scamp_addNoiseToDataVector, 3},
    {"_scamp_cppNoisyScamp", (DL_FUNC) &_scamp_cppNoisyScamp, 23},
    {"_scamp_doubleDip", (DL_FUNC) &_scamp_doubleDip, 1},
    {"_scamp_singleDip", (DL_FUNC) &_scamp_singleDip, 1},
    {"_scamp_tripleDip", (DL_FUNC) &_scamp_tripleDip, 1},
    {"_scamp_tsGates", (DL_FUNC) &_scamp_tsGates, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_scamp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
